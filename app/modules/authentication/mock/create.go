// Code generated by MockGen. DO NOT EDIT.
// Source: ./authentication/service/create.go

// Package mock is a generated GoMock package.
package mock

import (
	model "app/modules/authentication/model"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCreateAccountRepository is a mock of CreateAccountRepository interface.
type MockCreateAccountRepository struct {
	ctrl     *gomock.Controller
	recorder *MockCreateAccountRepositoryMockRecorder
}

// MockCreateAccountRepositoryMockRecorder is the mock recorder for MockCreateAccountRepository.
type MockCreateAccountRepositoryMockRecorder struct {
	mock *MockCreateAccountRepository
}

// NewMockCreateAccountRepository creates a new mock instance.
func NewMockCreateAccountRepository(ctrl *gomock.Controller) *MockCreateAccountRepository {
	mock := &MockCreateAccountRepository{ctrl: ctrl}
	mock.recorder = &MockCreateAccountRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreateAccountRepository) EXPECT() *MockCreateAccountRepositoryMockRecorder {
	return m.recorder
}

// CheckExistByEmail mocks base method.
func (m *MockCreateAccountRepository) CheckExistByEmail(ctx context.Context, email string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckExistByEmail", ctx, email)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckExistByEmail indicates an expected call of CheckExistByEmail.
func (mr *MockCreateAccountRepositoryMockRecorder) CheckExistByEmail(ctx, email interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckExistByEmail", reflect.TypeOf((*MockCreateAccountRepository)(nil).CheckExistByEmail), ctx, email)
}

// CreateAccount mocks base method.
func (m *MockCreateAccountRepository) CreateAccount(ctx context.Context, data *model.Account) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAccount", ctx, data)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateAccount indicates an expected call of CreateAccount.
func (mr *MockCreateAccountRepositoryMockRecorder) CreateAccount(ctx, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAccount", reflect.TypeOf((*MockCreateAccountRepository)(nil).CreateAccount), ctx, data)
}
